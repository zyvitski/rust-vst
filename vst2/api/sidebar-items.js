initSidebarItems({"enum":[["EventType","The type of event that has occured. See `api::Event.event_type`."],["FileSelectCommand","The file operation to perform."],["FileSelectType","Format to select files."],["HostLanguage","Language that the host is using."],["ProcessLevel","Denotes in which thread the host is in."],["SpeakerArrangementType","Tells the host how the channels are intended to be used in the plugin. Only useful for some hosts."],["Supported","Used to specify whether functionality is supported."]],"mod":[["consts","Constant values"],["flags","Bitflags."]],"struct":[["AEffect","Used with the VST API to pass around plugin information."],["ChannelProperties","Information about a channel. Only some hosts use this information."],["Event","A VST event intended to be casted to a corresponding type."],["EventIterator","An iterator over events, returned by `api::Events::events`"],["Events","A struct which contains events."],["FileSelect","File selector descriptor used in `host::OpCode::OpenFileSelector`."],["FileType","File type descriptor."],["MidiEvent","A midi event."],["SysExEvent","A midi system exclusive event."]],"type":[["DispatcherProc","Dispatcher function used to process opcodes. Called by host."],["GetParameterProc","Callback function used to get parameter values. Called by host."],["HostCallbackProc","Host callback function passed to plugin. Can be used to query host information from plugin side."],["PluginMain","`VSTPluginMain` function signature."],["ProcessProc","Process function used to process 32 bit floating point samples. Called by host."],["ProcessProcF64","Process function used to process 64 bit floating point samples. Called by host."],["SetParameterProc","Callback function used to set parameter values. Called by host."]]});